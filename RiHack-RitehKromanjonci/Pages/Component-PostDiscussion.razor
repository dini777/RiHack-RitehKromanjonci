@page "/PostDiscussion"
@using RiHack_RitehKromanjonci.Data;
@using RiHack_RitehKromanjonci.Models;
@inject AppDbContext dbContext
@inject NavigationManager navigationManager
@inject IHttpContextAccessor HttpContextAccessor
@using System.Security.Claims;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="images/favicon.ico" type="image/x-icon">
    <title>Sportleaf</title>
    <!-- style css link -->
    <link rel="stylesheet" href="./css/index-novi.css">
    <!-- fontawesome css link -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g==" crossorigin="anonymous" referrerpolicy="no-referrer" />

</head>
<body>
    
<!-- header section start -->


    <header>
        <div class="header-container">
            <div class="header-wrapper">
                <div class="logoBox">
                    <button><a href="./"><img src="images/icons8-home-480.png" alt="home"></a></button>
                </div>
                <div class="searchBox">
                    <input type="search">
                    <i class="fas fa-search"></i>
                </div>
                <div class="iconBox2">
                    <button><a href="./Discussions"><img src="images/icons8-chat-50.png" alt="chat"></a></button>
                    <button><a href="./logout"><img src="images/icons8-logout-30.png" alt="logout"></a></button>
                    <button><a href="./Profile"><label><img src="images/user.jpg" alt="user"></label></a></button>

                </div>
            </div>
        </div>
    </header>


<!-- header section end -->
<!-- home section start -->


<div class="home">
    <div class="container">
        <div class="home-weapper">

            <!-- home center start here -->

            <div class="home-center">
                <div class="home-center-wrapper">

                    <div class="createPost">

                        <h3 class="mini-headign">Create Post</h3>
                        <div class="post-text">
                            <img src="images/user.jpg" alt="user">
                           
                                <form @onsubmit="SubmitDiscussion">
                                   
                                        <label class="tekst" for="title">Naslov</label>
                                        <input type="text" id="title" @bind="newDiscussion.Title" class="form-control" required />
                                   
                                        <label class="tekst" for="content">Sadržaj</label>
                                        <input type="content" id="title" @bind="newDiscussion.Content" class="form-control" required />
                                   
                                    <button class="submit-button" type="submit">
                                        <span></span>
                                        <span></span>
                                        <span></span>
                                        <span></span>
                                        Potvrdi
                                    </button>
                                </form>
                        </div>
                    </div>

                   
                    

                </div> <!-- home center wrapper end -->
            </div> <!-- home center end -->
        </div>
    </div>
</div>
<!-- home section end -->
    

</body>
</html>

@code {
    private DiscussionPost newDiscussion = new DiscussionPost();

    public string GetUserEmailFromCookie()
    {
        var principal = HttpContextAccessor.HttpContext.User;
        if (principal.Identity.IsAuthenticated)
        {
            var emailClaim = principal.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Name);
            var email = emailClaim?.Value ?? "Not Found";
            return email;
        }
        else
        {
            return "Not authenticated";
        }
    }

    private async Task SubmitDiscussion()
    {
        newDiscussion.Author = GetUserEmailFromCookie(); // You can implement user authentication to set the actual author
        newDiscussion.DatePosted = DateTime.UtcNow;

        dbContext.DiscussionPosts.Add(newDiscussion);
        await dbContext.SaveChangesAsync();

        navigationManager.NavigateTo("/Discussions"); // Redirect to the discussion list
    }


}