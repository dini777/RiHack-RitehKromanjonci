@page "/register"
@using System.ComponentModel.DataAnnotations;
@using RiHack_RitehKromanjonci.Data;
@using RiHack_RitehKromanjonci.Models;

<h3>Register</h3>

<EditForm Model="registrationModel" OnValidSubmit="RegisterUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="Email">Email:</label>
        <InputText id="Email" @bind-Value="registrationModel.Email" class="form-control" />
        <ValidationMessage For="() => registrationModel.Email" />
    </div>

    <div class="form-group">
        <label for="Username">Username:</label>
        <InputText id="Username" @bind-Value="registrationModel.Username" class="form-control" />
        <ValidationMessage For="() => registrationModel.Username" />
    </div>

    <div class="form-group">
        <label for="Password">Password:</label>
        <InputText id="Password" type="password" @bind-Value="registrationModel.Password" class="form-control" />
        <ValidationMessage For="() => registrationModel.Password" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Register</button>
    </div>
</EditForm>

@if (!string.IsNullOrEmpty(registrationModel.ErrorMessage))
{
    <div class="alert alert-danger">@registrationModel.ErrorMessage</div>
}

@code {
    public class RegistrationModel
    {
        [EmailAddress]
        [Required(ErrorMessage = "Email is required.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Username is required.")]
        public string Username { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        public string Password { get; set; }

        public string ErrorMessage { get; set; }
    }

    private RegistrationModel registrationModel = new RegistrationModel();

    private async Task RegisterUser()
    {
        // Perform user registration here
        // You can use Entity Framework to save the user to the database

        var user = new User
            {
                Email = registrationModel.Email,
                Username = registrationModel.Username,
                Password = registrationModel.Password
            };

        // Save the user to the database using Entity Framework
        dbContext.Users.Add(user);

        try
        {
            await dbContext.SaveChangesAsync();
        }
        catch (Exception ex)
        {
            // Log or handle the exception
            // You can inspect 'ex' to get more details about the exception
        }

        // Redirect to a success page or perform other actions
        navigationManager.NavigateTo("/");
    }

    @inject AppDbContext dbContext
    @inject NavigationManager navigationManager

}
