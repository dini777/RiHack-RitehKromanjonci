@page "/personalworkoutplan"

@using RiHack_RitehKromanjonci.Data;

@inject AppDbContext Context

@if (!isQuestionaireFilled)
{
    <h3>Questionaire</h3>

    <div class="question-container">
        <div class="pitanje">
            <p>Koliko puta tjedno možeš trenirati?</p>
        </div>

        <div class="odgovori">
            <input type="radio" id="twoTimes" name="fav_language" onchange="@(() => {SetTimesOfTrainingPerWeek(2);})">
            <label for="twoTimes">2x tjedno</label>
            <br>
            <input type="radio" id="threeTimes" name="fav_language" onchange="@(() => {SetTimesOfTrainingPerWeek(3);})">
            <label for="threeTimes">3x tjedno</label>
            <br>
            <input type="radio" id="fourTimes" name="fav_language" onchange="@(() => {SetTimesOfTrainingPerWeek(4);})">
            <label for="fourTimes">4x tjedno</label>
            <br>
            <input type="radio" id="fiveTimes" name="fav_language" onchange="@(() => {SetTimesOfTrainingPerWeek(5);})">
            <label for="fiveTimes">5x tjedno</label>
            <br>
            <input type="radio" id="sixTimes" name="fav_language" onchange="@(() => {SetTimesOfTrainingPerWeek(6);})">
            <label for="sixTimes">6x tjedno</label>
        </div>

        <div>
            <p>Selected Value: @TimesOfTrainingPerWeek</p>
        </div>
    </div>

    <div class="question-container">
        <div class="pitanje">
            <p>Koliko dugo ste u treningu?</p>
        </div>

        <div class="odgovori">
            <input type="radio" id="gainMass" name="fav_language" onchange="@(() => {SetUsersExperienceWithGym("Beginner");})">
            <label for="gainMass">1 godina ili manje</label>
            <br>
            <input type="radio" id="loseMass" name="fav_language" onchange="@(() => {SetUsersExperienceWithGym("Intermediate");})">
            <label for="loseMass">2 - 5 godina</label>
            <br>
            <input type="radio" id="loseMass" name="fav_language" onchange="@(() => {SetUsersExperienceWithGym("Pro");})">
            <label for="loseMass">5+ godina</label>
        </div>

        <div>
            <p>Selected Value: @UsersExperienceWithGym</p>
        </div>
    </div>

    <div class="question-container">
        <div class="pitanje">
            <p>Želiš li izgubiti ili dobiti na kilaži?</p>
        </div>

        <div class="odgovori">
            <input type="radio" id="gainMass" name="fav_language" onchange="@(() => {SetGainMass(true);})">
            <label for="gainMass">Dobiti na kilaži</label>
            <br>
            <input type="radio" id="loseMass" name="fav_language" onchange="@(() => {SetGainMass(false);})">
            <label for="loseMass">Izgubiti na kilaži</label>
        </div>

        <div>
            <p>Selected Value: @GainMass</p>
        </div>
    </div>

    @*
    <div class="question-container">
        <div class="pitanje">
            <p>Molimo vas odaberite vježbe za teretanu koje preferirate</p>
        </div>

        <div class="odgovori">
            <input type="radio" id="gainMass" name="fav_language" onchange="@(() => {SetUsersExperienceWithGym("Beginner");})">
            <label for="gainMass">1 godina ili manje</label>
            <br>
            <input type="radio" id="loseMass" name="fav_language" onchange="@(() => {SetUsersExperienceWithGym("Intermediate");})">
            <label for="loseMass">2 - 5 godina</label>
            <br>
            <input type="radio" id="loseMass" name="fav_language" onchange="@(() => {SetUsersExperienceWithGym("Pro");})">
            <label for="loseMass">5+ godina</label>
        </div>

        <div>
            <p>Selected Value: @UsersExperienceWithGym</p>
        </div>
    </div>

    <div class="question-container">
        <div class="pitanje">
            <p>Molimo vas odaberite vježbe za cardio koje preferirate</p>
        </div>

        <div class="odgovori">
            <input type="radio" id="gainMass" name="fav_language" onchange="@(() => {SetUsersExperienceWithGym("Beginner");})">
            <label for="gainMass">1 godina ili manje</label>
            <br>
            <input type="radio" id="loseMass" name="fav_language" onchange="@(() => {SetUsersExperienceWithGym("Intermediate");})">
            <label for="loseMass">2 - 5 godina</label>
            <br>
            <input type="radio" id="loseMass" name="fav_language" onchange="@(() => {SetUsersExperienceWithGym("Pro");})">
            <label for="loseMass">5+ godina</label>
        </div>

        <div>
            <p>Selected Value: @UsersExperienceWithGym</p>
        </div>
    </div>
    *@
    
}
else
{
    <h3>TVOJ TRAINING PLAN</h3>
}


@code {
    private bool isQuestionaireFilled = false;
    private int TimesOfTrainingPerWeek { get; set; } = -1;
    private bool GainMass { get; set; } = false;
    private string UsersExperienceWithGym { get; set; } = "Beginner";


    private string LoggedInEmail { get; set; } = String.Empty;
    //private string TimesOfTrainingPerWeek { get; set; } = "-1";

    protected override async Task OnInitializedAsync()
    {
        /*
        var loggedUser = Context.Users.Where(x => x.Email == LoggedInEmail).First();

        isQuestionaireFilled = loggedUser.TrainingPlans!.IsQuestionaireFilled;

            if (isQuestionaireFilled)
            {
            await GetTrainingPlansData();
            }
            else
            {
            await GetQuestionaireData();
        }

        */
        await base.OnInitializedAsync();    
    }



    private void SetTimesOfTrainingPerWeek(int value)
    {
        if (TimesOfTrainingPerWeek == value)
        {
            return;
        }

        TimesOfTrainingPerWeek = value;
    }

    private void SetGainMass(bool value)
    {
        if (GainMass == value)
        {
            return;
        }

        GainMass = value;

    }

    private void SetUsersExperienceWithGym(string value)
    {
        if (UsersExperienceWithGym == value)
        {
            return;
        }

        UsersExperienceWithGym = value;
    }

    async Task GetTrainingPlansData()
    {
        
    }

    async Task GetQuestionaireData()
    {

    }

}
